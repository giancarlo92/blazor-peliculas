@page "/personas"
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes

<div class="form-group">
    <a class="btn btn-info" href="personas/crear">Agregar persona</a>
</div>

<ListadoGenerico Listado="Personas">
    <HayRegistrosCompleto>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Nombre</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Personas)
                {
                    <tr>
                        <td>
                            <a href="/personas/editar/@item.Id" class="btn btn-success">Editar</a>
                            <button class="btn btn-danger" @onclick="(() => BorrarPersona(item))">Eliminar</button>
                        </td>
                        <td>@item.Nombre</td>
                    </tr>
                }
            </tbody>
        </table>
    </HayRegistrosCompleto>
</ListadoGenerico>

@code {
    public List<Persona> Personas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Cargar();
    }

    private async Task Cargar()
    {
        var response = await repositorio.Get<List<Persona>>("api/personas");
        Personas = response.Response;
    }


    private async Task BorrarPersona(Persona persona)
    {
        var response = await repositorio.Delete($"api/personas/{persona.Id}");
        if (response.Error)
        {
            await mostrarMensajes.MostrarMensajeError(await response.GetBody());
        }
        else
        {
            await Cargar();

        }
    }
}

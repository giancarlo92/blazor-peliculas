@inject IJSRuntime js

<h3>Listado de Peliculas</h3>

<input type="checkbox" @bind="MostrarBotones" />

<ListadoGenerico Listado="ListaPeliculas">
    <HayRegistros Context="pelicula">
        <PeliculaIndividualAnterior Pelicula="pelicula" MostrarBotones="MostrarBotones" EliminarPelicula="Eliminar" />
    </HayRegistros>
</ListadoGenerico>

<Confirmacion @ref="confirmacion" onCancel="Cancelar" onConfirm="Confirmar">
    <div>¿Desea borrar la película?</div>
</Confirmacion>

@code {

    [Parameter] public List<Pelicula> ListaPeliculas { get; set; }
    Confirmacion confirmacion;

    protected override void OnInitialized()
    {
        Console.WriteLine($"OnInitialized - Cantidad peliculas: {ListaPeliculas.Count}");
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"OnParametersSet - Cantidad peliculas: {ListaPeliculas.Count}");
    }

    protected override void OnAfterRender(bool primeraRenderizacion)
    {
        Console.WriteLine($"OnAfterRender primera vez {primeraRenderizacion}");
    }

    protected override bool ShouldRender()
    {
        Console.WriteLine("ShouldRender");
        return true;
    }

    bool MostrarBotones = true;

    private void Eliminar(Pelicula pelicula)
    {
        confirmacion.Mostrar();
        peliculaABorrar = pelicula;
        //bool confirmado = await js.Confirm($"¿Desea borrar la pelicula {pelicula.Titulo}?");
        //if(confirmado)
        //{
        //    ListaPeliculas.Remove(pelicula);
        //}
    }

    Pelicula peliculaABorrar;
    private void Cancelar()
    {
        confirmacion.Ocultar();
        peliculaABorrar = null;
    }

    private void Confirmar()
    {
        ListaPeliculas.Remove(peliculaABorrar);
        confirmacion.Ocultar();
        peliculaABorrar = null;

    }
}
